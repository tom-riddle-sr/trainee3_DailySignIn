// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	mongo "go.mongodb.org/mongo-driver/mongo"
)

// IMongoDB is an autogenerated mock type for the IMongoDB type
type IMongoDB struct {
	mock.Mock
}

type IMongoDB_Expecter struct {
	mock *mock.Mock
}

func (_m *IMongoDB) EXPECT() *IMongoDB_Expecter {
	return &IMongoDB_Expecter{mock: &_m.Mock}
}

// GetDB provides a mock function with given fields:
func (_m *IMongoDB) GetDB() *mongo.Database {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetDB")
	}

	var r0 *mongo.Database
	if rf, ok := ret.Get(0).(func() *mongo.Database); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*mongo.Database)
		}
	}

	return r0
}

// IMongoDB_GetDB_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDB'
type IMongoDB_GetDB_Call struct {
	*mock.Call
}

// GetDB is a helper method to define mock.On call
func (_e *IMongoDB_Expecter) GetDB() *IMongoDB_GetDB_Call {
	return &IMongoDB_GetDB_Call{Call: _e.mock.On("GetDB")}
}

func (_c *IMongoDB_GetDB_Call) Run(run func()) *IMongoDB_GetDB_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *IMongoDB_GetDB_Call) Return(_a0 *mongo.Database) *IMongoDB_GetDB_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IMongoDB_GetDB_Call) RunAndReturn(run func() *mongo.Database) *IMongoDB_GetDB_Call {
	_c.Call.Return(run)
	return _c
}

// NewIMongoDB creates a new instance of IMongoDB. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIMongoDB(t interface {
	mock.TestingT
	Cleanup(func())
}) *IMongoDB {
	mock := &IMongoDB{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
